####################################################################
#     Processor:           S32K144 with 48 KB SRAM
#     Compiler:            COSMIC C Compiler
#
#     Abstract:
#         Linker file for the COSMIC C Compiler
#
#     Copyright (c) 2015-2016 Freescale Semiconductor, Inc.
#     Copyright 2017 NXP
#     All rights reserved.
#
#     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
#     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
#     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
#     THE POSSIBILITY OF SUCH DAMAGE.
#
#     http:                 www.freescale.com
#     mail:                 support@freescale.com
#
####################################################################
# SRAM_L
+seg __isr_vector  -b 0x1FFF9000 -m 0x00000400    -n __isr_vector  -k # Interrupt tables

+seg  ResetH_Seg -b 0x1FFF9400 -m 0x00006C00 -r3  -n ResetH_Seg    -k # ResetH_Seg
+seg .text       -a ResetH_Seg -r3            -n text             # Text
+seg .code_ram   -a text                      -n code_ram      -k # Custom section for storing code in RAM
+seg .const      -a code_ram                  -n const            # Large constants
+seg .sconst     -a const                     -n sconst           # String constants

+seg FlashConfig -c  -a const                                     # FlashConfig - suppressed

# SRAM_U
+seg .customSection  -b 0x20000000 -m 0x00003C00  -n customSection -k # Custom Section Block at absolute address.
+seg .data           -a customSection         -n data             # Data

+seg .bsct           -a data                  -n bsct             # Initialized variables
+seg .sdata          -a bsct                  -n sdata            # Small initialized variables
+seg .bss            -a sdata                 -n bss              # Uninitialized data
+seg .sbss           -a bss                   -n sbss             # Uninitialized small data

+seg .stack_seg      -e 0x20004000 -m 0x00000400  -n stack_seg        # Stack segment


###############################
#	the project files
################################
# Include all of the objects on the command line and
# insert them at this location in the link file.
@*
libm.cxm
libilc.cxm
libfpulc.cxm

+def __memory=end(sbss)                  # symbol used by library
+def ___DATA_RAM=start(data)
+def ___CODE_RAM=start(code_ram)
+def ___VECTOR_RAM=start(__isr_vector)
+def ___VECTOR_TABLE=start(__isr_vector)
+def ___RAM_VECTOR_TABLE_SIZE=0x0
+def __StackTop=end(stack_seg)
+def ___BSS_START=start(bss)
+def ___BSS_END=end(sbss)
+def ___DATA_ROM=start(data)
+def ___DATA_END=start(data)
+def ___CODE_ROM=start(code_ram)
+def ___CODE_END=start(code_ram)
